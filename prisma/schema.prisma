generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Reports {
  id          String   @id @default(dbgenerated("gen_random_uuid()"))
  title       String
  status      String?  @default("analysing")
  description String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model Services {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  name      String
  duration  Int
  companyId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Company   Company  @relation(fields: [companyId], references: [id])
}

model User {
  id             String    @id @default(dbgenerated("gen_random_uuid()"))
  name           String?
  email          String    @unique
  phoneNumber    String?   @unique
  password       String?
  country        String?
  companyId      String?   @unique
  registerStep   Int       @default(1)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  annualDiscount Boolean?
  planId         String?
  provider       String?
  method         String?
  Reports        Reports[]
  Company        Company?  @relation(fields: [companyId], references: [id])
  Plan           Plans?    @relation(fields: [planId], references: [id])
}

model Company {
  id           String         @id @default(dbgenerated("gen_random_uuid()"))
  name         String
  type         String?
  shareCode    String?        @unique
  address      String?
  amountAtTime Int?           @default(1)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Appointments Appointments[]
  Schedules    Schedules[]
  Services     Services[]
  User         User?
}

model Appointments {
  id               String     @id @default(dbgenerated("gen_random_uuid()"))
  name             String
  phoneNumber      String
  status           String?    @default("waiting")
  companyId        String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  services         String[]
  confirmedHour    DateTime?
  hours            DateTime[]
  date             String?
  confirmationCode String?
  Company          Company    @relation(fields: [companyId], references: [id])
}

model Schedules {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  companyId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  days      String[]
  end       String
  start     String
  Company   Company  @relation(fields: [companyId], references: [id])
}

model Plans {
  id              String   @id @default(dbgenerated("gen_random_uuid()"))
  name            String
  country         String
  initials        String
  annualValue     Float
  annualDiscount  Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  maxAppointments Int
  User            User[]
}
